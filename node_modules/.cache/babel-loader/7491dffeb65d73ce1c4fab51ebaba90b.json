{"ast":null,"code":"/*import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nvar reptiles = ['alligator', 'snake', 'lizard'];\n\n// class ItemList extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {value: ''};\n//       }\n\n//     render(){\n//         return (\n          \n//         ); \n//     }\n// }\n\n\n// class TodoItems extends React.Component {\n//     createTasks(item) {\n//       return <li key={item.key}>{item.text}</li>\n//     }\n   \n//     render() {\n//       var todoEntries = this.props.entries;\n//       var listItems = todoEntries.map(this.createTasks);\n   \n//       return (\n//         <ul className=\"theList\">\n//             {listItems}\n//         </ul>\n//       );\n//     }\n//   };\n   \n//   export default TodoItems;\n\n\n\n\n\n// Do stuff\nclass DoStuff extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        items: []\n      };\n    }\n\n    addItem(e) {\n        if (this._inputElement.value !== \"\") {\n          var newItem = {\n            text: this._inputElement.value,\n            key: Date.now()\n          };\n       \n          this.setState((prevState) => {\n            return { \n              items: prevState.items.concat(newItem) \n            };\n          });\n         \n          this._inputElement.value = \"\";\n        }\n         \n        console.log(this.state.items);\n           \n        e.preventDefault();\n      }\n\n    render(){\n        return (\n        <div className=\"todoListMain\"></div>\n        );\n    }\n}\n\n\n\n// Makes the form appear in the modal, always\nclass Form extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    render(){\n        return (\n            <form id=\"form\" onsubmit={this.addItem}>\n          <input type=\"text\" name=\"input\" id=\"input\" placeholder=\"Item\"/>\n          <input type=\"date\" name=\"expiry\" id=\"expiry\"/>\n          <input type=\"submit\" class=\"btn btn-default\" data-dismiss=\"modal\"/>}\n        </form>\n        );\n    }\n}\n\n\n\n// ReactDOM Renders\n\nReactDOM.render(\n    <div>\n        <DoStuff />\n    </div>,\n    document.getElementById(\"list\")\n); \n\nReactDOM.render(\n    <div>\n        <Form />\n    </div>,\n    document.getElementById(\"form-root\")\n); \n\n*/\nfunction handleClick() {\n  var node = document.createElement(\"LI\");\n  var textnode = document.createTextNode(\"Water\");\n  node.appendChild(textnode);\n  document.getElementById(\"myList\").appendChild(node);\n} // Create a \"close\" button and append it to each list item\n\n\nvar myNodelist = document.getElementsByTagName(\"LI\");\nvar i;\n\nfor (i = 0; i < myNodelist.length; i++) {\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  myNodelist[i].appendChild(span);\n} // Click on a close button to hide the current list item\n\n\nvar close = document.getElementsByClassName(\"close\");\nvar i;\n\nfor (i = 0; i < close.length; i++) {\n  close[i].onclick = function () {\n    var div = this.parentElement;\n    div.style.display = \"none\";\n  };\n} // Add a \"checked\" symbol when clicking on a list item\n\n\nvar list = document.querySelector('ul');\nlist.addEventListener('click', function (ev) {\n  if (ev.target.tagName === 'LI') {\n    ev.target.classList.toggle('checked');\n  }\n}, false); // Create a new list item when clicking on the \"Add\" button\n\nfunction newElement() {\n  var li = document.createElement(\"li\");\n  var inputValue = document.getElementById(\"myInput\").value;\n  var t = document.createTextNode(inputValue);\n  li.appendChild(t);\n\n  if (inputValue === '') {\n    alert(\"You must write something!\");\n  } else {\n    document.getElementById(\"myUL\").appendChild(li);\n  }\n\n  document.getElementById(\"myInput\").value = \"\";\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  li.appendChild(span);\n\n  for (i = 0; i < close.length; i++) {\n    close[i].onclick = function () {\n      var div = this.parentElement;\n      div.style.display = \"none\";\n    };\n  }\n}","map":{"version":3,"sources":["/Users/admin/Downloads/groceries/src/index.js"],"names":["handleClick","node","document","createElement","textnode","createTextNode","appendChild","getElementById","myNodelist","getElementsByTagName","i","length","span","txt","className","close","getElementsByClassName","onclick","div","parentElement","style","display","list","querySelector","addEventListener","ev","target","tagName","classList","toggle","newElement","li","inputValue","value","t","alert"],"mappings":"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","sourcesContent":["/*import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nvar reptiles = ['alligator', 'snake', 'lizard'];\n\n// class ItemList extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {value: ''};\n//       }\n\n//     render(){\n//         return (\n          \n//         ); \n//     }\n// }\n\n\n// class TodoItems extends React.Component {\n//     createTasks(item) {\n//       return <li key={item.key}>{item.text}</li>\n//     }\n   \n//     render() {\n//       var todoEntries = this.props.entries;\n//       var listItems = todoEntries.map(this.createTasks);\n   \n//       return (\n//         <ul className=\"theList\">\n//             {listItems}\n//         </ul>\n//       );\n//     }\n//   };\n   \n//   export default TodoItems;\n\n\n\n\n\n// Do stuff\nclass DoStuff extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        items: []\n      };\n    }\n\n    addItem(e) {\n        if (this._inputElement.value !== \"\") {\n          var newItem = {\n            text: this._inputElement.value,\n            key: Date.now()\n          };\n       \n          this.setState((prevState) => {\n            return { \n              items: prevState.items.concat(newItem) \n            };\n          });\n         \n          this._inputElement.value = \"\";\n        }\n         \n        console.log(this.state.items);\n           \n        e.preventDefault();\n      }\n\n    render(){\n        return (\n        <div className=\"todoListMain\"></div>\n        );\n    }\n}\n\n\n\n// Makes the form appear in the modal, always\nclass Form extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n    render(){\n        return (\n            <form id=\"form\" onsubmit={this.addItem}>\n          <input type=\"text\" name=\"input\" id=\"input\" placeholder=\"Item\"/>\n          <input type=\"date\" name=\"expiry\" id=\"expiry\"/>\n          <input type=\"submit\" class=\"btn btn-default\" data-dismiss=\"modal\"/>}\n        </form>\n        );\n    }\n}\n\n\n\n// ReactDOM Renders\n\nReactDOM.render(\n    <div>\n        <DoStuff />\n    </div>,\n    document.getElementById(\"list\")\n); \n\nReactDOM.render(\n    <div>\n        <Form />\n    </div>,\n    document.getElementById(\"form-root\")\n); \n\n*/\n\n\n\nfunction handleClick() {\n    var node = document.createElement(\"LI\");\n    var textnode = document.createTextNode(\"Water\");\n    node.appendChild(textnode);\n    document.getElementById(\"myList\").appendChild(node);\n  }\n\n\n\n\n  // Create a \"close\" button and append it to each list item\nvar myNodelist = document.getElementsByTagName(\"LI\");\nvar i;\nfor (i = 0; i < myNodelist.length; i++) {\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  myNodelist[i].appendChild(span);\n}\n\n// Click on a close button to hide the current list item\nvar close = document.getElementsByClassName(\"close\");\nvar i;\nfor (i = 0; i < close.length; i++) {\n  close[i].onclick = function() {\n    var div = this.parentElement;\n    div.style.display = \"none\";\n  }\n}\n\n// Add a \"checked\" symbol when clicking on a list item\nvar list = document.querySelector('ul');\nlist.addEventListener('click', function(ev) {\n  if (ev.target.tagName === 'LI') {\n    ev.target.classList.toggle('checked');\n  }\n}, false);\n\n// Create a new list item when clicking on the \"Add\" button\nfunction newElement() {\n  var li = document.createElement(\"li\");\n  var inputValue = document.getElementById(\"myInput\").value;\n  var t = document.createTextNode(inputValue);\n  li.appendChild(t);\n  if (inputValue === '') {\n    alert(\"You must write something!\");\n  } else {\n    document.getElementById(\"myUL\").appendChild(li);\n  }\n  document.getElementById(\"myInput\").value = \"\";\n\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  li.appendChild(span);\n\n  for (i = 0; i < close.length; i++) {\n    close[i].onclick = function() {\n      var div = this.parentElement;\n      div.style.display = \"none\";\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}