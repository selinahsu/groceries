{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/groceries/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n/*ReactDOM.render(\n    <div>\n        <ToDo />\n    </div>,\n    document.getElementById(\"root\")\n); */\n\nvar reptiles = ['alligator', 'snake', 'lizard'];\nvar myNodelist = document.getElementsByTagName(\"LI\");\nvar i;\n\nfor (i = 0; i < myNodelist.length; i++) {\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  myNodelist[i].appendChild(span);\n} // Click on a close button to hide the current list item\n\n\nvar close = document.getElementsByClassName(\"close\");\nvar i;\n\nfor (i = 0; i < close.length; i++) {\n  close[i].onclick = function () {\n    var div = this.parentElement;\n    div.style.display = \"none\";\n  };\n} // Add a \"checked\" symbol when clicking on a list item\n\n\nvar list = document.querySelector('ul');\nlist.addEventListener('click', function (ev) {\n  if (ev.target.tagName === 'LI') {\n    ev.target.classList.toggle('checked');\n  }\n}, false);\n\nfunction newItem() {\n  var li = document.createElement(\"li\");\n  var inputValue = document.getElementById(\"item\").value;\n  var t = document.createTextNode(inputValue);\n  li.appendChild(t);\n\n  if (inputValue === '') {\n    alert(\"You must write something!\");\n  } else {\n    document.getElementById(\"myUL\").appendChild(li);\n  }\n\n  document.getElementById(\"item\").value = \"\";\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  li.appendChild(span);\n\n  for (let i = 0; i < close.length; i++) {\n    close[i].onclick = function () {\n      var div = this.parentElement;\n      div.style.display = \"none\";\n    };\n  }\n}\n\nclass ItemForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    this.props.onSubmit(event.target.value);\n  }\n\n  render() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"hi there\");\n  }\n\n}\n\nclass ItemList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    }; //this.addItem = this.addItem.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ItemForm, {\n      onSubmit: newItem => this.setState(() => reptiles.push(newItem)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, reptiles)); // this returns the array containing the list of items\n  }\n\n}\n/*\nReactDOM.render(\n    <div>\n        <ItemForm />\n    </div>, \n    document.getElementById(\"root\")\n);\n*/\n\n\nReactDOM.render(React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, React.createElement(ItemList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n})), document.getElementById(\"list\"));","map":{"version":3,"sources":["/Users/admin/Downloads/groceries/src/index.js"],"names":["React","ReactDOM","reptiles","myNodelist","document","getElementsByTagName","i","length","span","createElement","txt","createTextNode","className","appendChild","close","getElementsByClassName","onclick","div","parentElement","style","display","list","querySelector","addEventListener","ev","target","tagName","classList","toggle","newItem","li","inputValue","getElementById","value","t","alert","ItemForm","Component","constructor","props","state","handleSubmit","bind","event","onSubmit","render","ItemList","setState","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n  \n/*ReactDOM.render(\n    <div>\n        <ToDo />\n    </div>,\n    document.getElementById(\"root\")\n); */\n\nvar reptiles = ['alligator', 'snake', 'lizard'];\n\nvar myNodelist = document.getElementsByTagName(\"LI\");\nvar i;\nfor (i = 0; i < myNodelist.length; i++) {\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  myNodelist[i].appendChild(span);\n}\n\n// Click on a close button to hide the current list item\nvar close = document.getElementsByClassName(\"close\");\nvar i;\nfor (i = 0; i < close.length; i++) {\n  close[i].onclick = function() {\n    var div = this.parentElement;\n    div.style.display = \"none\";\n  }\n}\n\n// Add a \"checked\" symbol when clicking on a list item\nvar list = document.querySelector('ul');\nlist.addEventListener('click', function(ev) {\n  if (ev.target.tagName === 'LI') {\n    ev.target.classList.toggle('checked');\n  }\n}, false);\n\n\n\n\n\n\n\n\n\nfunction newItem() {\n    var li = document.createElement(\"li\");\n  var inputValue = document.getElementById(\"item\").value;\n  var t = document.createTextNode(inputValue);\n  li.appendChild(t);\n  if (inputValue === '') {\n    alert(\"You must write something!\");\n  } else {\n    document.getElementById(\"myUL\").appendChild(li);\n  }\n  document.getElementById(\"item\").value = \"\";\n\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  li.appendChild(span);\n\n  for (let i = 0; i < close.length; i++) {\n    close[i].onclick = function() {\n      var div = this.parentElement;\n      div.style.display = \"none\";\n    }\n  }\n  }\n\n\n\n\nclass ItemForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleSubmit(event) {\n        this.props.onSubmit(event.target.value);\n    }\n\n    render(){\n        return (\n            <h1>hi there</h1>\n        );\n    }\n}\n\nclass ItemList extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      //this.addItem = this.addItem.bind(this);\n    }\n\n    render(){\n        return (\n            <div>\n                <div>\n                    <ItemForm onSubmit={(newItem) => this.setState(() => reptiles.push(newItem))}/>\n                </div>\n                <div>\n                    {reptiles}\n                </div>\n            </div>\n        ); // this returns the array containing the list of items\n    }\n}\n\n/*\nReactDOM.render(\n    <div>\n        <ItemForm />\n    </div>, \n    document.getElementById(\"root\")\n);\n*/\n\nReactDOM.render(\n    <div>\n        <ItemList />\n    </div>,\n    document.getElementById(\"list\")\n); "]},"metadata":{},"sourceType":"module"}